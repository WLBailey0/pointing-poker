{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Login from'./Login';import PokerTable from'./PokerTable';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[username,setUsername]=useState('');return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/\",element:username?/*#__PURE__*/_jsx(PokerTable,{username:username}):/*#__PURE__*/_jsx(Login,{setUsername:setUsername})})})})});};export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Login","PokerTable","jsx","_jsx","App","username","setUsername","children","path","element"],"sources":["/home/linux/team-pointing-poker/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './Login';\nimport PokerTable from './PokerTable';\nimport './App.css'\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n\n  return (\n    <Router>\n      <div>\n        <Routes>\n          <Route path=\"/\" element = {username ? <PokerTable username={username} /> : <Login setUsername={setUsername} />}>\n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,WAAW,QAAAC,GAAA,IAAAC,IAAA,yBAElB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE5C,mBACEQ,IAAA,CAACN,MAAM,EAAAU,QAAA,cACLJ,IAAA,QAAAI,QAAA,cACEJ,IAAA,CAACJ,MAAM,EAAAQ,QAAA,cACLJ,IAAA,CAACL,KAAK,EAACU,IAAI,CAAC,GAAG,CAACC,OAAO,CAAIJ,QAAQ,cAAGF,IAAA,CAACF,UAAU,EAACI,QAAQ,CAAEA,QAAS,CAAE,CAAC,cAAGF,IAAA,CAACH,KAAK,EAACM,WAAW,CAAEA,WAAY,CAAE,CAAE,CACxG,CAAC,CACF,CAAC,CACN,CAAC,CACA,CAAC,CAEb,CAAC,CAED,cAAe,CAAAF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}